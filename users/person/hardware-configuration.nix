# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
      kernelModules = [ ];
    };
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/81011f40-1f31-44d6-bcaf-1a0ebe8e3ffe";
      fsType = "ext4";
    };

  fileSystems."/run/media/person/Seagate Expansion Drive" =
    { device = "/dev/sda2";
      fsType = "ntfs3";
    };

  fileSystems."/run/media/person/Samsung 980" =
    { device = "/dev/nvme0n1p1";
      fsType = "ext4";
    };

#  fileSystems."Bazzite maybe" =
#    { device = "";
#      fsType = "ext4";
#    };

#  fileSystems."/boot" =
#    { device = "systemd-1";
#      fsType = "autofs";
#    };

#  fileSystems."/boot" =
#    { device = "/dev/disk/by-uuid/C80D-CE4F";
#      fsType = "vfat";
#    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
